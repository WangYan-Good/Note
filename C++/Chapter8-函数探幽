8.1 C++内联函数
  内联函数与常规函数区别在于内联函数C++编译器将它们组合到程序中的方式不一样

  函数声明前加上关键字 inline
  函数定义前加上关键字 inline

  内联函数不能递归

8.2 引用变量
  引用变量的主要用途是改变是用作函数的形参

  创建和引用变量
  int rats;
  int & rodents = rats;

  引用在声明对象时需要被初始化，且之后不可改变所指向的对象。
  以下代码表达的效果相同
  int & rodents = rats;
  int * const pr = &rats;

  不能将表达式或常量按照变量的引用传递

  左值参数：可被引用的数据对象
  右值引用：C++11的新特性，可对赋值语句的右边进行引用（右值-不能通过地址访问的值）
  
  ofstream 类是从 ostream 类派生出来的
  
  适合使用引用参数的条件：
  1.程序员能够修改调用函数中的数据对象
  2.通过传递引用而不是整个数据对象，可以提高程序的运行速度
 
  一般传递对象时用引用传递

8.3 默认参数
  Example: char * left ( const char * str, int n = 1 );
  以上参数 n 为默认参数，在不指定参数 n 的时候，默认使用n = 1;

  通过使用默认参数，可以减少要定义的析构函数，方法以及方法重载的数量。

8.4 函数重载 
